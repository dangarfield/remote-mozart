<style>
    .p-25 {
        padding: 0.75rem;
    }

    .has-error .form-control {
        border-color: #a94442;
        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
    }

    .has-error .form-control:focus {
        border-color: #843534;
        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 6px #ce8483;
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 6px #ce8483;
    }

    .has-success .form-control {
        border-color: #3c763d;
        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
    }

    .has-success .form-control:focus {
        border-color: #2b542c;
        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 6px #67b168;
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 6px #67b168;
    }

    .has-feedback .form-control {
        padding-right: 42.5px;
    }

    .has-error .help-block,
    .has-error .control-label,
    .has-error .radio,
    .has-error .checkbox,
    .has-error .radio-inline,
    .has-error .checkbox-inline {
        color: #a94442;
    }

    .help-block {
        display: block;
        margin-top: 5px;
        margin-bottom: 10px;
        color: #737373;
    }
</style>

<main role="main" class="col-md-9 ml-sm-auto col-lg-10 px-4">
    <div
        class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="h2">Edit Device - {{device.id}}</h1>
        <div class="btn-toolbar mb-2 mb-md-0">
            <div class="btn-group mr-2">
                <a href="/device-groups/{{device.deviceGroup}}" type="button"
                    class="btn btn-sm btn-outline-secondary">View device group</a>
                {{!-- <button type="button" class="btn btn-sm btn-outline-secondary deploy">Deploy</button>
                <button type="button" class="btn btn-sm btn-outline-secondary copy">Copy to staged</button>
                <button type="button" class="btn btn-sm btn-outline-secondary">Delete</button> --}}
            </div>
        </div>
    </div>
    <form class="form device-data">
        <div class="row pb-2">
            <div class="col-6">
                <h2 class="h3">Device Group Config <span class="badge badge-secondary">version
                        {{deviceGroup.deployed.version}}</span>
                </h2>
            </div>
            <div class="col-6">
                <h2 class="h3">Device Override</h2>
            </div>
        </div>
        <div class="row pb-2">
            <div class="col-12">
                <h5 class="h5">Environment Variables</h5>
            </div>
            <div class="col-6">
                <div class="deployed-envs">
                    <table class="table table-borderless">
                        <tbody>
                            {{#each deviceGroup.deployed.envs}}
                            <tr>
                                <td>
                                    <input type="text" class="form-control deployed-name" value="{{this.key}}"
                                        disabled="disabled" />
                                </td>
                                <td>
                                    <input type="text" class="form-control deployed-value" value="{{this.value}}"
                                        disabled="disabled" />
                                </td>
                            </tr>
                            {{/each}}
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="col-6">
                <div class="staged-envs">
                    <table class="table table-hover table-borderless table-envs">
                        <tbody>
                            {{#each device.envs}}
                            <tr class="row-env">
                                <td>
                                    <div class="form-group"><input type="text" class="form-control env-key"
                                            value="{{this.key}}" /></div>
                                </td>
                                <td>
                                    <div class="form-group"><input type="text" class="form-control env-value"
                                            value="{{this.value}}" /></div>
                                </td>
                                <td><input type="button" class="btn btn-md btn-danger env-remove" value="Delete">
                                </td>
                            </tr>
                            {{/each}}
                        </tbody>
                        <tfoot>
                            <tr>
                                <td colspan="2" style="text-align: right;">
                                    <input type="button" class="btn btn-lg btn-block env-add"
                                        value="Add environment variable" />
                                </td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
                <div class="save">
                    <button type="submit" class="btn btn-primary save" disabled="disabled">Save</button>
                </div>
            </div>

        </div>
        <div class="row pb-2">
            <div class="col-12">
                <h5 class="h5">Run Script</h5>
            </div>
            <div class="col-6">
                <div class="form-group p-25">
                    <textarea class="form-control" rows="10" disabled="disabled">{{deviceGroup.deployed.run}}</textarea>
                </div>
            </div>
        </div>

        <div class="row pb-2">
            <div class="col-12">
                <h5 class="h5">Stop Script</h5>
            </div>
            <div class="col-6">
                <div class="form-group p-25">
                    <textarea class="form-control" rows="10"
                        disabled="disabled">{{deviceGroup.deployed.stop}}</textarea>
                </div>
            </div>
        </div>
        <div class="row pb-2">
            <div class="col-12">
                <h5 class="h5">Files</h5>
            </div>
            <div class="col-6">
                <div class="deployed-files">
                    <table class="table table-borderless">
                        <tbody>
                            {{#each deviceGroup.deployed.files}}
                            <tr class="deployed-row-file-name">
                                <td>
                                    <div class="form-group"><input type="text" class="form-control deployed-file-name"
                                            value="{{this.name}}" placeholder="File name" disabled="disabled" /></div>
                                </td>
                            </tr>
                            <tr class="deployed-row-file-content">
                                <td colspan="2">
                                    <div class="form-group">
                                        <textarea class="form-control deployed-file-content" rows="10"
                                            placeholder="File content" disabled="disabled">{{this.content}}</textarea>
                                    </div>
                                </td>
                            </tr>
                            {{/each}}
                        </tbody>
                    </table>

                </div>
            </div>
        </div>

    </form>
</main>
<div aria-live="polite" aria-atomic="true" style="position: relative; min-height: 200px;">
    <div class="toast-container" style="position: absolute; top: 0; right: 0;">
    </div>
</div>
<script>

    const displayToast = async (type, title) => {
        $.toast({
            title: title,
            type: type,
            delay: 5000
        });
    }
    const saveDeviceData = async (formData) => {
        console.log('saveStagedData', formData)
        $.ajax({
            url: '/device-groups/{{device.deviceGroup}}/devices/{{device.id}}/edit',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(formData)
        }).done(async function (data) {
            console.log('Saved config res: ' + data)
            await displayToast('success', 'Device config saved')
        }).fail(async function (error) {
            console.log('Error saving staged config', error)
            await displayToast('error', 'Error saving device config')
        })
    }
    const getFormData = async () => {
        let data = {
            envs: []
        }
        $('.table-envs tr.row-env').each(function (i, row) {
            let key = $(row).find('.env-key').val()
            let value = $(row).find('.env-value').val()
            console.log('env', key, value)
            data.envs.push({ key: key, value: value })
        })
        return data
    }

    const unbindFormValidation = async () => {
        let bootstrapValidator = $('.device-data').data('bootstrapValidator')
        if (bootstrapValidator !== undefined) {
            try {
                bootstrapValidator.destroy()
            }
            catch (error) {
                console.error('bootstrapValidator destroy', error);
            }
            try {
                $('.device-data').data('bootstrapValidator', null)
            }
            catch (error) {
                console.error('bootstrapValidator null', error);
            }
        }
    }
    const bindFormValidation = async () => {
        console.log('bindFormValidation')

        $('.device-data').bootstrapValidator({
            feedbackIcons: {
                valid: 'glyphicon glyphicon-ok',
                invalid: 'glyphicon glyphicon-remove',
                validating: 'glyphicon glyphicon-refresh'
            },
            fields: {
                envKey: {
                    selector: '.env-key',
                    message: 'The key is not valid',
                    validators: {
                        notEmpty: {
                            message: 'The key is required and cannot be empty'
                        }
                    }
                },
                envValue: {
                    selector: '.env-value',
                    message: 'The value is not valid',
                    validators: {
                        notEmpty: {
                            message: 'The value is required and cannot be empty'
                        }
                    }
                }
            }
        }).on('success.form.bv', async function (e) {
            e.preventDefault();
            let formData = await getFormData()
            console.log('Form valid and submitted', formData)
            await saveDeviceData(formData)
        })

    }
    const bindEnvAdd = async () => {
        $('.env-add').click(async function () {
            await unbindFormValidation()
            let row = $('<tr class="row-env">')
            let cols = ''
            cols += '<td><div class="form-group"><input type="text" class="form-control env-key" value="" placeholder="Key" /></div></td>'
            cols += '<td><div class="form-group"><input type="text" class="form-control env-value" value="" placeholder="Value" /></div></td>'
            cols += '<td><input type="button" class="btn btn-md btn-danger env-remove" value="Delete"></td>'
            row.append(cols)
            $('table.table-envs').append(row)
            await bindEnvRemove()
            await bindFormValidation()
        })
    }
    const bindEnvRemove = async () => {
        $(".env-remove").unbind()
        $(".env-remove").click(async function () {
            await unbindFormValidation()
            $(this).closest('tr').remove()
            await bindFormValidation()
        })
    }
    $('document').ready(async function () {
        console.log('ready')
        await bindEnvAdd()
        await bindEnvRemove()
        await bindFormValidation()
    })
</script>